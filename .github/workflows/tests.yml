name: Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        poetry install --with dev

    - name: Run tests with coverage
      run: |
        poetry run python -m pytest tests/ -v --cov=trendsearth_ui --cov-report=xml --cov-report=html

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  playwright-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      run: |
        poetry install --with dev

    - name: Install Playwright browsers
      run: |
        # Install only chromium browser with dependencies and retry on failure
        for i in {1..3}; do
          if poetry run playwright install chromium --with-deps; then
            echo "Browser installation successful on attempt $i"
            echo "PLAYWRIGHT_BROWSERS_AVAILABLE=true" >> $GITHUB_ENV
            break
          else
            echo "Browser installation failed on attempt $i, retrying..."
            sleep 10
          fi
        done
        # If all attempts failed, set flag to skip tests gracefully
        if [ "${PLAYWRIGHT_BROWSERS_AVAILABLE:-false}" != "true" ]; then
          echo "Browser installation failed after all attempts. Tests will be skipped gracefully."
          echo "PLAYWRIGHT_BROWSERS_AVAILABLE=false" >> $GITHUB_ENV
        fi
      timeout-minutes: 15
      continue-on-error: true

    - name: Run Playwright tests
      run: |
        # Run tests - they will be skipped automatically if browsers aren't available
        poetry run python -m pytest tests/playwright/ -v

    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
