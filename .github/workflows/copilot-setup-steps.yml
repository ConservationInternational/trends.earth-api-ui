name: "Trends.Earth API UI Development Environment Setup"

on:
  workflow_dispatch:
    inputs:
      python_version:
        description: "Python version to use"
        required: false
        default: "3.12"
        type: choice
        options:
          - "3.11"
          - "3.12"
      install_browsers:
        description: "Install Playwright browsers"
        required: false
        default: true
        type: boolean

jobs:
  copilot-setup-steps:
    name: "Complete Development Environment Setup"
    runs-on: ubuntu-latest

    steps:
      - name: Debug workflow context
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Trigger: ${{ github.event.action || 'N/A' }}"
          echo "Python version input: ${{ inputs.python_version || 'default (3.12)' }}"
          echo "Install browsers input: ${{ inputs.install_browsers || 'default (true)' }}"
          echo "GitHub runner OS: ${{ runner.os }}"
          echo "Working directory: $(pwd)"
        
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version || '3.12' }}
          cache: "pip"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          echo "Installing Python dependencies with Poetry..."
          poetry install --with dev
          echo "‚úÖ Dependencies installed successfully"

      - name: Install Playwright browsers (optional)
        if: ${{ inputs.install_browsers != false }}
        run: |
          echo "Installing Playwright browsers..."
          poetry run playwright install chromium --with-deps || echo "Playwright installation failed or skipped"
          poetry run playwright --version || echo "Playwright not available"
        timeout-minutes: 15

      - name: Verify core setup
        run: |
          echo "üîç Verifying core development environment setup..."
          echo "Poetry version: $(poetry --version)"
          echo "Python version: $(poetry run python --version)"
          echo "Testing trendsearth_ui import..."
          poetry run python -c "import trendsearth_ui; print('‚úÖ trendsearth_ui module imported successfully')"

      - name: Verify Ruff
        run: |
          echo "üîç Verifying Ruff (linter/formatter)..."
          echo "Ruff version: $(poetry run ruff --version)"
          echo "Testing Ruff functionality..."
          echo 'print("hello")' > /tmp/test_ruff.py
          poetry run ruff check /tmp/test_ruff.py
          poetry run ruff format /tmp/test_ruff.py
          rm /tmp/test_ruff.py
          echo "‚úÖ Ruff working correctly"

      - name: Run a quick unit test
        run: |
          echo "üîç Running quick unit test to verify functionality..."
          poetry run python -m pytest tests/unit/test_config.py -v --tb=short
          echo "‚úÖ Unit tests passed"

      - name: Summary
        run: |
          echo "üéâ Development Environment Setup Complete!"
          echo "=================================="
          echo "Python: $(poetry run python --version)"
          echo "Poetry: $(poetry --version)"
          echo "Pytest: $(poetry run pytest --version)"
          echo "Ruff: $(poetry run ruff --version)"
          poetry run playwright --version || echo "Playwright: Not installed"
          echo "=================================="
          echo "‚úÖ Environment is ready for development"
